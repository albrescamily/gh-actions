name: Staging PR Workflow

on:
  pull_request:
    branches:
        main
    types: [opened, synchronize, reopened] # Triggers the workflow when a PR is opened, synchronized, or reopened

env: # Defines global environment variables for the workflow (optional)
  GLOBAL_VARIABLE: "This is a global workflow variable"

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # The type of runner the job will execute on
    environment: staging # Specifies the "staging" environment for this job

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Checks out your repository code

    - name: Access Staging Secrets and Variables
      run: |
        echo "Accessing secrets and variables from the 'staging' environment:"
        echo "Environment variable (ENV_VARIABLE): ${{ vars.ENV_VARIABLE }}"
        echo "Environment secret (ENV_SECRET): ${{ secrets.ENV_SECRET }}"
        echo "Global workflow variable: ${{ env.GLOBAL_VARIABLE }}"
        echo "GitHub context variable (GITHUB_REF_NAME): ${{ github.ref_name }}"
        echo "GitHub context variable (GITHUB_HEAD_REF): ${{ github.head_ref }}"

    - name: Example of using variables in a command
      run: |
        echo "Running a command using the variable: build --env=${{ vars.ENV_VARIABLE }}"
        # In this example, you'd replace this with a real command from your project.
        # For example: npm run build --env=${{ vars.ENV_VARIABLE }}

    - name: Example of using secrets in a command (use with caution!)
      run: |
        echo "Running a command using the secret (NOT RECOMMENDED FOR LOG OUTPUT!): deploy --token=${{ secrets.ENV_SECRET }}"
        # CAUTION: Never print secrets to production logs.
        # This is just an example to demonstrate access.
        # In a real scenario, the secret would be passed to a tool or script securely.